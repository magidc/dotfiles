[
    {
        "key": "shift+z",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && (vim.mode == 'Insert' || vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')",
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && (vim.mode == 'Insert' || vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')",
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+s",
        "command": "vim.remap",
        "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "args": {
            "after": [
                "V",
                "g",
                "g",
                "G"
            ]
        }
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll"
    },
    // NORMAL MODE MAPPINGS
    // Edit
    {
        "key": "shift+=",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "v"
            ]
        }
    },
    {
        "key": "shift+c",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "$"
            ]
        }
    },
    {
        "key": "shift+y",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "y",
                "$"
            ]
        }
    },
    {
        "key": "alt+d",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "d",
                "i",
                "w"
            ]
        }
    },
    {
        "key": "alt+c",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "i",
                "w"
            ]
        }
    },
    {
        "key": "alt+shift+d",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "d",
                "i",
                " ",
                "w"
            ]
        }
    },
    {
        "key": "alt+shift+c",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "i",
                " ",
                "w"
            ]
        }
    },
    {
        "key": "alt+z",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "i",
                "\""
            ]
        }
    },
    {
        "key": "alt+x",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "i",
                "("
            ]
        }
    },
    {
        "key": "alt+a",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "c",
                "i",
                "a"
            ]
        }
    },
    {
        "key": "alt+s",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "d",
                "i",
                "a"
            ]
        }
    },
    {
        "key": "alt+o",
        "command": "runCommands",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "commands": [
                "editor.action.insertLineAfter",
                "cursorUp",
            ]
        },
    },
    {
        "key": "alt+shift+o",
        "command": "runCommands",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "commands": [
                "editor.action.insertLineBefore",
                "cursorDown",
            ]
        },
    },
    // Motions
    {
        "key": "shift+l",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'OperatorPendingMode'",
        "args": {
            "after": [
                "$"
            ]
        }
    },
    {
        "key": "shift+h",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'OperatorPendingMode'",
        "args": {
            "after": [
                "^"
            ]
        }
    },
    //// CamelCaseMotion
    {
        "key": "shift+w",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                " ",
                "w"
            ]
        }
    },
    {
        "key": "shift+b",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                " ",
                "b"
            ]
        }
    },
    {
        "key": "shift+e",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                " ",
                "e"
            ]
        }
    },
    //// EasyMotion
    {
        "key": "\\",
        "command": "vim.remap",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                " ",
                " ",
                "2",
                "s"
            ]
        }
    },
    // Window navigation
    {
        "key": "alt+q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+w s",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.increaseViewWidth"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.increaseViewHeight"
    },
    {
        "key": "ctrl+left",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.decreaseViewHeight"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "escape",
        "command": "workbench.action.navigateEditorGroups",
        "when": "!editorFocus"
    },
    // Find (leader f)
    {
        "key": "; ;",
        "command": "vim.remap",
        "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "args": {
            "after": [
                ":",
                "n",
                "o",
                "h",
                "l"
            ]
        },
    },
    {
        "key": "space f e",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.quickOpen",
    },
    {
        "key": "space f g",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.findInFiles",
    },
    {
        "key": "space f a",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "space f s",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.gotoSymbol",
    },
    {
        "key": "space f b",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.showEditorsInActiveGroup",
    },
    {
        "key": "space f h",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.openRecent",
    },
    {
        "key": "space f d",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "actions.find",
    },
    {
        "key": "space f r",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.action.startFindReplaceAction",
    },
    // Views (leader v)
    {
        "key": "space v q",
        "when": "editorTextFocus && vim.mode == 'Normal' && sideBarVisible",
        "command": "workbench.action.maximizeEditor",
    },
    {
        "key": "space v f",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.explorer.fileView.focus"
    },
    {
        "key": "space v s",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "outline.focus"
    },
    {
        "key": "space v t",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "terminal.focus"
    },
    {
        "key": "space v c",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.panel.chat.view.copilot.focus"
    },
    // Debug (leader d)
    {
        "key": "space d b",
        "when": "vim.mode == 'Normal' && debuggersAvailable && (disassemblyViewFocus || editorTextFocus)",
        "command": "editor.debug.action.toggleBreakpoint",
    },
    {
        "key": "f9",
        "when": "editorTextFocus && vim.mode == 'Normal' && debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus",
        "command": "-editor.debug.action.toggleBreakpoint",
    },
    {
        "key": "space d c",
        "when": "editorTextFocus && vim.mode == 'Normal' && debugState == 'stopped'",
        "command": "workbench.action.debug.continue",
    },
    {
        "key": "f5",
        "when": "debugState == 'stopped'",
        "command": "-workbench.action.debug.continue",
    },
    {
        "key": "space d v",
        "when": "editorTextFocus && vim.mode == 'Normal' && debugState == 'stopped'",
        "command": "workbench.action.debug.stepOver",
    },
    {
        "key": "f10",
        "when": "debugState == 'stopped'",
        "command": "-workbench.action.debug.stepOver",
    },
    {
        "key": "space d i",
        "when": "editorTextFocus && vim.mode == 'Normal' && debugState != 'inactive'",
        "command": "workbench.action.debug.stepInto",
    },
    {
        "key": "f11",
        "when": "debugState != 'inactive'",
        "command": "-workbench.action.debug.stepInto",
    },
    {
        "key": "space d o",
        "when": "editorTextFocus && vim.mode == 'Normal' && debugState == 'stopped'",
        "command": "workbench.action.debug.stepOut",
    },
    {
        "key": "shift+f11",
        "when": "debugState == 'stopped'",
        "command": "-workbench.action.debug.stepOut",
    },
    {
        "key": "space d k",
        "when": "editorTextFocus && vim.mode == 'Normal' && inDebugMode && !focusedSessionIsAttach",
        "command": "workbench.action.debug.stop",
    },
    {
        "key": "shift+f5",
        "when": "inDebugMode && !focusedSessionIsAttach",
        "command": "-workbench.action.debug.stop",
    },
    {
        "key": "space d x",
        "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine') && inDebugMode",
        "command": "editor.debug.action.selectionToRepl"
    },
    {
        "key": "space d d",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
    },
    {
        "key": "space d m",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction"
    },
    {
        "key": "space d shift+b",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "space d r",
        "when": "editorTextFocus && vim.mode == 'Normal' && debuggersAvailable && debugState != 'initializing'",
        "command": "workbench.action.debug.run",
    },
    {
        "key": "ctrl+f5",
        "when": "debuggersAvailable && debugState != 'initializing'",
        "command": "-workbench.action.debug.run",
    },
    {
        "key": "space d e",
        "when": "vim.mode == 'Normal' && debuggersAvailable && debugState == 'inactive'",
        "command": "workbench.action.debug.start",
    },
    {
        "key": "f5",
        "when": "debuggersAvailable && debugState == 'inactive'",
        "command": "-workbench.action.debug.start",
    },
    // Code navigation (leader c)
    {
        "key": "space c i",
        "when": "vim.mode == 'Normal' && editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor",
        "command": "editor.action.goToImplementation",
    },
    {
        "key": "ctrl+f12",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor",
        "command": "-editor.action.goToImplementation",
    },
    {
        "key": "space c d",
        "when": "vim.mode == 'Normal' && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
        "command": "editor.action.revealDefinition",
    },
    {
        "key": "f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
        "command": "-editor.action.revealDefinition",
    },
    {
        "key": "space c r",
        "when": "vim.mode == 'Normal' && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "command": "editor.action.goToReferences",
    },
    {
        "key": "shift+f12",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "command": "-editor.action.goToReferences",
    },
    {
        "key": "space c t",
        "when": "vim.mode == 'Normal' && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "command": "editor.action.goToTypeDefinition",
    },
    // Refactoring (leader r)
    {
        "key": "space r f",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.action.format",
    },
    {
        "key": "space r n",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.action.rename",
    },
    // Source generation (leader s)
    {
        "key": "space s f",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "explorer.newFile"
    },
    // Errors and diagnostics (leader e)
    {
        "key": "space e n",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.action.marker.next",
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "space e p",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "editor.action.marker.prev",
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    // Display modes (leader m)
    {
        "key": "space m z",
        "when": "editorTextFocus && vim.mode == 'Normal'",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    // VISUAL MODE MAPPINGS
    {
        "key": "v",
        "command": "vim.remap",
        "when": "editorTextFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "args": {
            "after": [
                "^",
                "o",
                "$"
            ]
        },
    },
    {
        "key": ">",
        "when": "editorTextFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "command": "editor.action.indentLines"
    },
    {
        "key": "<",
        "when": "editorTextFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "command": "editor.action.outdentLines"
    },
    {
        "key": "shift+=",
        "when": "editorTextFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "command": "editor.action.smartSelect.expand"
    },
    {
        "key": "shift+-",
        "when": "editorTextFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
        "command": "editor.action.smartSelect.shrink"
    },
]