format = """
$os\
$username\
$hostname\
$localip\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
${custom.giturl}\
$shell\
$character\
"""
right_format = """
$shlvl\
$singularity\
$kubernetes\
$vcsh\
$fossil_branch\
$fossil_metrics\
$hg_branch\
$pijul_channel\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$gleam\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$quarto\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$typst\
$vlang\
$vagrant\
$zig\
$buf\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$nats\
$direnv\
$env_var\
$crystal\
${custom.docker}\
$sudo\
$cmd_duration\
$jobs\
$battery\
$time\
$status\
$container\
"""


[username]
show_always = false
format = '[$user ]($style)'
disabled = false

[directory]
read_only = " 󰌾"
format = "[ $path ]($style)"
truncate_to_repo = true
truncation_length = 3

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "󰈙 Documents"
"Documentos" = "󰈙 Documentos"
"Downloads" = " Downloads"
"Descargas" = " Descargas"
"Projects" = " Projects"
"Proxectos" = " Proxectos"
"Libros" = " Libros"
# Keep in mind that the order matters. For example:
# "Important Documents" = " 󰈙 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important 󰈙 " = " 󰈙 "

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
format = '[$time ]($style)'

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
disabled = true # Disabled by default


[aws]
symbol = " AWS "
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'


[docker_context]
symbol = " "
format = '[ $symbol $context ]($style)'

[custom.docker]
description = "Shows the docker symbol if the current directory has Dockerfile or docker-compose.yml files"
command = "echo 🐳"
files = ["Dockerfile", "docker-compose.yml", "docker-compose.yaml"]
when = """ command -v docker &> /dev/null; exit (echo $?); """

[gcloud]
format='on [$symbol$account(@$domain)(\($region\))]($style) '
disabled = true

[git_branch]
symbol = " "

[git_commit]
tag_symbol = '  '

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[*${count}](green)" 
modified = "[!${count}](yellow)" 
deleted =  "[-${count}](red)" 
conflicted =  "[x${count}](red)" 
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[?${count}](blue)" 
staged = "[+${count}](green)" 

[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server"
command = '''
GIT_REMOTE=$(git ls-remote --get-url 2> /dev/null);
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    echo " ";
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    echo " ";
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    echo " ";
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    echo " ";
else
    echo " ";
fi
'''
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = "zsh"
format = "$output  "


[java]
format = '[${symbol}(${version} )]($style)'
version_format = "v${raw}"
style = "red"
